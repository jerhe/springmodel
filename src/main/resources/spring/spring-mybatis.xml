<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--配置数据库连接-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>

        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/>

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>

        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat"/>
    </bean>

    <!-- SessionFactory Configure -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mappingLocations">
            <value>classpath:hibernate/*.hbm.xml</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="current_session_context_class">
                    org.springframework.orm.hibernate4.SpringSessionContext
                </prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.failOverReadOnly">false</prop>
                <prop key="hibernate.characterEncoding">utf-8</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- Spring整合Mybatis，更多查看文档：http://mp.baomidou.com -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描Mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
	</bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>
    <!-- 配置事务管理 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- 事务管理 属性 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="append*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="repair" propagation="REQUIRED"/>

            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="load*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="search*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="datagrid*" propagation="REQUIRED" read-only="true"/>

            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置切面 -->
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.jerhe.model.service..*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>
    </aop:config>

    <!--过滤器-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/api/pri/login" />
        <property name="successUrl" value="/main/index" />
        <property name="unauthorizedUrl" value="/api/pri/login" />
        <property name="filters">
            <map>
                <entry key="urlValidate">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.UrlValidateFilter" />
                </entry>
                <entry key="authc">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.AuthcFilter" />
                </entry>
                <entry key="systemMaintenUrlValidate">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.SystemMaintenUrlValidateFilter" />
                </entry>
                <entry key="authcWechat">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.AuthcWechatFilter">
                        <property name="loginUri" value="/wx/login/login" />
                    </bean>
                </entry>
                <entry key="authcWechatEnhance">
                    <bean
                            class="com.xmrbi.iparking.api.app.shiro.filter.AuthcWechatEnhanceFilter" />
                </entry>
                <entry key="authcWechatFromJfc">
                    <bean
                            class="com.xmrbi.iparking.api.app.shiro.filter.AuthcWechatFromJfcFilter" />
                </entry>
                <entry key="authcWechatShare">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.AuthcWechatShareFilter" />
                </entry>
                <entry key="authcOpenId">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.AuthcOpenIdFilter" />
                </entry>
                <entry key="authcAli">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.AuthcAliFilter">
                        <property name="loginUri" value="/ali/login/login" />
                    </bean>
                </entry>
                <entry key="authcAliEnhance">
                    <bean
                            class="com.xmrbi.iparking.api.app.shiro.filter.AuthcAliEnhanceFilter" />
                </entry>
                <entry key="authcAliUserId">
                    <bean class="com.xmrbi.iparking.api.app.shiro.filter.AuthcAliUserIdFilter" />
                </entry>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                / = anon
                /*.jsp = anon
                /interior/cnd/** = anon
                /interior/icar/** = anon
                /interior/session/** = anon
                /commom/ueditor/** = anon
                /pub/plug/** = anon
                /pub/activity/** = urlValidate
                /pub/page/**/** = anon
                /pub/scan/** = anon
                /pub/msg/** = anon
                /pub/wechat/** = anon
                /pub/ebs/** = anon
                /pub/tax/** = anon
                /pri/ietc/pay/** = anon
                /pub/** = anon
                /pri/** = urlValidate,authc
                /wx/login/** = anon
                /favicon.ico = anon
                /code = anon
                /wx/jfc/** = authcWechatFromJfc
                /wx/p/pay/fixCodeVoucherPage = authcWechatEnhance
                /wx/p/pay/toRedirectPage = authcWechatEnhance
                /wx/p/pay/toVoucherPageEnhance = authcWechatEnhance
                /wx/p/pay/toAddCarJudge = authcWechatEnhance
                /wx/p/pay/toPayPageEnhance = urlValidate,authcWechatEnhance
                /wx/p/pay/bindVirtualPlate = urlValidate,authcWechatEnhance
                /wx/p/pay/goReservePay = authcWechatEnhance
                /wx/p/pay/goIlifePay = authcWechatEnhance
                /wx/p/activity/** =authcWechatShare
                /wx/p/marketing/showMarketing = authcWechatEnhance
                /wx/p/** = urlValidate,authcWechatFromJfc,authcWechat
                /wx/d/activity/** =anon
                /wx/d/** = authcOpenId
                /wx/j/** = authcOpenId
                /ali/login/** = anon
                /ali/cityservice/** = urlValidate,authcAliEnhance
                /ali/p/pay/toVoucherPageEnhance = authcAliEnhance
                /ali/p/pay/toPayPageEnhance = urlValidate,authcAliEnhance
                /ali/p/pay/toAddCarJudge = authcAliEnhance
                /ali/p/pay/toRedirectPage = authcAliEnhance
                /ali/p/pay/alipayNoService = anon
                /ali/p/pay/fixCodeVoucherPage = authcAliEnhance
                /ali/d/pay/verifyPark = authcAliEnhance
                /ali/p/** = urlValidate,authcAli
                /ali/d/** = authcAliUserId
                /ali/j/** = authcAliUserId
                /resources/** = anon
                /pay/pub/** = anon
                /pay/pri/** = urlValidate,authc
                /pay/callback/** = anon
                /cloud/** = urlValidate
                /teld/teldplat/** = anon
                /invoice/igs/** = anon
                /** = urlValidate,authc
            </value>
        </property>
    </bean>-->
    
</beans>
